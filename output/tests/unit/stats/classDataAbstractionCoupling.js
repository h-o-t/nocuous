"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const { describe, it } = intern.getInterface("bdd");
const { expect } = intern.getPlugin("chai");
const util_1 = require("../util");
const classDataAbstractionCoupling_1 = require("../../../src/stats/classDataAbstractionCoupling");
describe("stats/classDataAbstractionCoupling", () => {
  it("returns undefined when no items", async () => {
    const sourceFile = util_1.fixtureAsSourceFile("simple.ts");
    const result = await classDataAbstractionCoupling_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.be.undefined;
  });
  it("should count classes", async () => {
    const sourceFile = util_1.fixtureAsSourceFile(
      "stats/classDataAbstractionCoupling.ts"
    );
    const result = await classDataAbstractionCoupling_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.not.be.undefined;
    expect(result.count).to.equal(2);
  });
  it("score based on the threshold", async () => {
    const sourceFile = util_1.fixtureAsSourceFile(
      "stats/classDataAbstractionCoupling.ts"
    );
    const result = await classDataAbstractionCoupling_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.not.be.undefined;
    expect(result.score).to.equal(1);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Rlc3RzL3VuaXQvc3RhdHMvY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNwRCxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUU1QyxrQ0FBOEM7QUFFOUMsa0dBQXVFO0FBRXZFLFFBQVEsQ0FBQyxvQ0FBb0MsRUFBRSxHQUFHLEVBQUU7SUFDbEQsRUFBRSxDQUFDLGlDQUFpQyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQy9DLE1BQU0sVUFBVSxHQUFHLDBCQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sTUFBTSxHQUFHLE1BQU0sbUNBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6RCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7SUFDakMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsc0JBQXNCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDcEMsTUFBTSxVQUFVLEdBQUcsMEJBQW1CLENBQ3BDLHVDQUF1QyxDQUN4QyxDQUFDO1FBQ0YsTUFBTSxNQUFNLEdBQUcsTUFBTSxtQ0FBSSxDQUFDLFVBQVUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7UUFDbkMsTUFBTSxDQUFDLE1BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDhCQUE4QixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzVDLE1BQU0sVUFBVSxHQUFHLDBCQUFtQixDQUNwQyx1Q0FBdUMsQ0FDeEMsQ0FBQztRQUNGLE1BQU0sTUFBTSxHQUFHLE1BQU0sbUNBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6RCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxNQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkZXNjcmliZSwgaXQgfSA9IGludGVybi5nZXRJbnRlcmZhY2UoXCJiZGRcIik7XG5jb25zdCB7IGV4cGVjdCB9ID0gaW50ZXJuLmdldFBsdWdpbihcImNoYWlcIik7XG5cbmltcG9ydCB7IGZpeHR1cmVBc1NvdXJjZUZpbGUgfSBmcm9tIFwiLi4vdXRpbFwiO1xuXG5pbXBvcnQgeyBzdGF0IH0gZnJvbSBcIi4uLy4uLy4uL3NyYy9zdGF0cy9jbGFzc0RhdGFBYnN0cmFjdGlvbkNvdXBsaW5nXCI7XG5cbmRlc2NyaWJlKFwic3RhdHMvY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZ1wiLCAoKSA9PiB7XG4gIGl0KFwicmV0dXJucyB1bmRlZmluZWQgd2hlbiBubyBpdGVtc1wiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc291cmNlRmlsZSA9IGZpeHR1cmVBc1NvdXJjZUZpbGUoXCJzaW1wbGUudHNcIik7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhdChzb3VyY2VGaWxlLCB7IHRocmVzaG9sZDogMTAgfSk7XG4gICAgZXhwZWN0KHJlc3VsdCkudG8uYmUudW5kZWZpbmVkO1xuICB9KTtcblxuICBpdChcInNob3VsZCBjb3VudCBjbGFzc2VzXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzb3VyY2VGaWxlID0gZml4dHVyZUFzU291cmNlRmlsZShcbiAgICAgIFwic3RhdHMvY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZy50c1wiXG4gICAgKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGF0KHNvdXJjZUZpbGUsIHsgdGhyZXNob2xkOiAxMCB9KTtcbiAgICBleHBlY3QocmVzdWx0KS50by5ub3QuYmUudW5kZWZpbmVkO1xuICAgIGV4cGVjdChyZXN1bHQhLmNvdW50KS50by5lcXVhbCgyKTtcbiAgfSk7XG5cbiAgaXQoXCJzY29yZSBiYXNlZCBvbiB0aGUgdGhyZXNob2xkXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzb3VyY2VGaWxlID0gZml4dHVyZUFzU291cmNlRmlsZShcbiAgICAgIFwic3RhdHMvY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZy50c1wiXG4gICAgKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGF0KHNvdXJjZUZpbGUsIHsgdGhyZXNob2xkOiAxMCB9KTtcbiAgICBleHBlY3QocmVzdWx0KS50by5ub3QuYmUudW5kZWZpbmVkO1xuICAgIGV4cGVjdChyZXN1bHQhLnNjb3JlKS50by5lcXVhbCgxKTtcbiAgfSk7XG59KTtcbiJdfQ==
