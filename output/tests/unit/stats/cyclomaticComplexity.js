"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const { describe, it } = intern.getInterface("bdd");
const { expect } = intern.getPlugin("chai");
const util_1 = require("../util");
const cyclomaticComplexity_1 = require("../../../src/stats/cyclomaticComplexity");
describe("stats/cyclomaticComplexity", () => {
  it("returns undefined when no items", async () => {
    const sourceFile = util_1.fixtureAsSourceFile("simple.ts");
    const result = await cyclomaticComplexity_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.be.undefined;
  });
  it("should count functions and methods", async () => {
    const sourceFile = util_1.fixtureAsSourceFile(
      "stats/cyclomaticComplexity.ts"
    );
    const result = await cyclomaticComplexity_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.not.be.undefined;
    expect(result.count).to.equal(7);
  });
  it("score based on the threshold", async () => {
    const sourceFile = util_1.fixtureAsSourceFile(
      "stats/cyclomaticComplexity.ts"
    );
    const result = await cyclomaticComplexity_1.stat(sourceFile, {
      threshold: 10
    });
    expect(result).to.not.be.undefined;
    expect(result.score).to.equal(0);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3ljbG9tYXRpY0NvbXBsZXhpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXN0cy91bml0L3N0YXRzL2N5Y2xvbWF0aWNDb21wbGV4aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3BELE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRTVDLGtDQUE4QztBQUU5QyxrRkFBK0Q7QUFFL0QsUUFBUSxDQUFDLDRCQUE0QixFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsaUNBQWlDLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDL0MsTUFBTSxVQUFVLEdBQUcsMEJBQW1CLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDcEQsTUFBTSxNQUFNLEdBQUcsTUFBTSwyQkFBSSxDQUFDLFVBQVUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUNqQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxvQ0FBb0MsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNsRCxNQUFNLFVBQVUsR0FBRywwQkFBbUIsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sTUFBTSxHQUFHLE1BQU0sMkJBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6RCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxNQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyw4QkFBOEIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUM1QyxNQUFNLFVBQVUsR0FBRywwQkFBbUIsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sTUFBTSxHQUFHLE1BQU0sMkJBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6RCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxNQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkZXNjcmliZSwgaXQgfSA9IGludGVybi5nZXRJbnRlcmZhY2UoXCJiZGRcIik7XG5jb25zdCB7IGV4cGVjdCB9ID0gaW50ZXJuLmdldFBsdWdpbihcImNoYWlcIik7XG5cbmltcG9ydCB7IGZpeHR1cmVBc1NvdXJjZUZpbGUgfSBmcm9tIFwiLi4vdXRpbFwiO1xuXG5pbXBvcnQgeyBzdGF0IH0gZnJvbSBcIi4uLy4uLy4uL3NyYy9zdGF0cy9jeWNsb21hdGljQ29tcGxleGl0eVwiO1xuXG5kZXNjcmliZShcInN0YXRzL2N5Y2xvbWF0aWNDb21wbGV4aXR5XCIsICgpID0+IHtcbiAgaXQoXCJyZXR1cm5zIHVuZGVmaW5lZCB3aGVuIG5vIGl0ZW1zXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzb3VyY2VGaWxlID0gZml4dHVyZUFzU291cmNlRmlsZShcInNpbXBsZS50c1wiKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGF0KHNvdXJjZUZpbGUsIHsgdGhyZXNob2xkOiAxMCB9KTtcbiAgICBleHBlY3QocmVzdWx0KS50by5iZS51bmRlZmluZWQ7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIGNvdW50IGZ1bmN0aW9ucyBhbmQgbWV0aG9kc1wiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc291cmNlRmlsZSA9IGZpeHR1cmVBc1NvdXJjZUZpbGUoXCJzdGF0cy9jeWNsb21hdGljQ29tcGxleGl0eS50c1wiKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGF0KHNvdXJjZUZpbGUsIHsgdGhyZXNob2xkOiAxMCB9KTtcbiAgICBleHBlY3QocmVzdWx0KS50by5ub3QuYmUudW5kZWZpbmVkO1xuICAgIGV4cGVjdChyZXN1bHQhLmNvdW50KS50by5lcXVhbCg3KTtcbiAgfSk7XG5cbiAgaXQoXCJzY29yZSBiYXNlZCBvbiB0aGUgdGhyZXNob2xkXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzb3VyY2VGaWxlID0gZml4dHVyZUFzU291cmNlRmlsZShcInN0YXRzL2N5Y2xvbWF0aWNDb21wbGV4aXR5LnRzXCIpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN0YXQoc291cmNlRmlsZSwgeyB0aHJlc2hvbGQ6IDEwIH0pO1xuICAgIGV4cGVjdChyZXN1bHQpLnRvLm5vdC5iZS51bmRlZmluZWQ7XG4gICAgZXhwZWN0KHJlc3VsdCEuc2NvcmUpLnRvLmVxdWFsKDApO1xuICB9KTtcbn0pO1xuIl19
