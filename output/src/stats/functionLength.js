"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts_morph_1 = require("ts-morph");
exports.stat = async function stat(sourceFile, { threshold }) {
  let count = 0;
  let score = 0;
  sourceFile.forEachDescendant(node => {
    if (
      ts_morph_1.TypeGuards.isFunctionDeclaration(node) ||
      ts_morph_1.TypeGuards.isFunctionExpression(node) ||
      ts_morph_1.TypeGuards.isMethodDeclaration(node)
    ) {
      count++;
      const body = node.getBody();
      if (body && ts_morph_1.TypeGuards.isBlock(body)) {
        const length = body.getStatements().length;
        score += threshold && length >= threshold ? length / threshold : 0;
      }
    }
  });
  return count
    ? {
        metric: "functionLength",
        level: "function",
        count,
        threshold,
        score
      }
    : undefined;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25MZW5ndGguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RhdHMvZnVuY3Rpb25MZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBc0M7QUFXekIsUUFBQSxJQUFJLEdBQXNCLEtBQUssVUFBVSxJQUFJLENBQ3hELFVBQVUsRUFDVixFQUFFLFNBQVMsRUFBRTtJQUViLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNsQyxJQUNFLHFCQUFVLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDO1lBQ3RDLHFCQUFVLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDO1lBQ3JDLHFCQUFVLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEVBQ3BDO1lBQ0EsS0FBSyxFQUFFLENBQUM7WUFDUixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDNUIsSUFBSSxJQUFJLElBQUkscUJBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3BDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxNQUFNLENBQUM7Z0JBQzNDLEtBQUssSUFBSSxTQUFTLElBQUksTUFBTSxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BFO1NBQ0Y7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sS0FBSztRQUNWLENBQUMsQ0FBQztZQUNFLE1BQU0sRUFBRSxnQkFBZ0I7WUFDeEIsS0FBSyxFQUFFLFVBQVU7WUFDakIsS0FBSztZQUNMLFNBQVM7WUFDVCxLQUFLO1NBQ047UUFDSCxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQ2hCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGVHdWFyZHMgfSBmcm9tIFwidHMtbW9ycGhcIjtcbmltcG9ydCB7IFN0YXQsIFN0YXRPcHRpb25zIH0gZnJvbSBcIi4uL2ludGVyZmFjZXNcIjtcblxuLyoqXG4gKiBTZWFyY2hlcyB0aGUgc291cmNlIGZpbGUgZm9yIGZ1bmN0aW9uIGRlY2xhcmF0aW9ucywgZnVuY3Rpb24gZXhwcmVzc2lvbnMsIG9yXG4gKiBtZXRob2QgZGVjbGFyYXRpb25zIGFuZCBhbmFseXNlcyB0aGUgbnVtYmVyIG9mIHN0YXRlbWVudHMgaW4gdGhlIGJvZHlcbiAqIGNvbXBhcmVkIHRvIHRoZSB0aHJlc2hvbGQuXG4gKlxuICogRnVuY3Rpb25zIG9yIG1ldGhvZHMgdGhhdCBoYXZlIHRvbyBtYW55IHN0YXRlbWVudHMgYXJlIGRpZmZpY3VsdCB0byBtYWludGFpblxuICogYW5kIHNob3VsZCBiZSBicm9rZW4gdXAgaW50byBzbWFsbGVyIGNodW5rcyBvZiBjb2RlLlxuICovXG5leHBvcnQgY29uc3Qgc3RhdDogU3RhdDxTdGF0T3B0aW9ucz4gPSBhc3luYyBmdW5jdGlvbiBzdGF0KFxuICBzb3VyY2VGaWxlLFxuICB7IHRocmVzaG9sZCB9XG4pIHtcbiAgbGV0IGNvdW50ID0gMDtcbiAgbGV0IHNjb3JlID0gMDtcbiAgc291cmNlRmlsZS5mb3JFYWNoRGVzY2VuZGFudChub2RlID0+IHtcbiAgICBpZiAoXG4gICAgICBUeXBlR3VhcmRzLmlzRnVuY3Rpb25EZWNsYXJhdGlvbihub2RlKSB8fFxuICAgICAgVHlwZUd1YXJkcy5pc0Z1bmN0aW9uRXhwcmVzc2lvbihub2RlKSB8fFxuICAgICAgVHlwZUd1YXJkcy5pc01ldGhvZERlY2xhcmF0aW9uKG5vZGUpXG4gICAgKSB7XG4gICAgICBjb3VudCsrO1xuICAgICAgY29uc3QgYm9keSA9IG5vZGUuZ2V0Qm9keSgpO1xuICAgICAgaWYgKGJvZHkgJiYgVHlwZUd1YXJkcy5pc0Jsb2NrKGJvZHkpKSB7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IGJvZHkuZ2V0U3RhdGVtZW50cygpLmxlbmd0aDtcbiAgICAgICAgc2NvcmUgKz0gdGhyZXNob2xkICYmIGxlbmd0aCA+PSB0aHJlc2hvbGQgPyBsZW5ndGggLyB0aHJlc2hvbGQgOiAwO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjb3VudFxuICAgID8ge1xuICAgICAgICBtZXRyaWM6IFwiZnVuY3Rpb25MZW5ndGhcIixcbiAgICAgICAgbGV2ZWw6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgY291bnQsXG4gICAgICAgIHRocmVzaG9sZCxcbiAgICAgICAgc2NvcmVcbiAgICAgIH1cbiAgICA6IHVuZGVmaW5lZDtcbn07XG4iXX0=
