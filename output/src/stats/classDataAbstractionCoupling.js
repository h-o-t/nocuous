"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts_morph_1 = require("ts-morph");
exports.stat = async function stat(sourceFile, { threshold }) {
  const classes = sourceFile.getClasses();
  const count = classes.length;
  let score = 0;
  for (const classNode of classes) {
    let newExpressionCount = 0;
    classNode.forEachDescendant((node, traversal) => {
      if (node.getKind() === ts_morph_1.SyntaxKind.NewExpression) {
        newExpressionCount++;
        traversal.skip();
      }
    });
    score +=
      threshold > 0 && newExpressionCount >= threshold
        ? newExpressionCount / threshold
        : 0;
  }
  return count
    ? {
        metric: "classDataAbstractionCoupling",
        level: "class",
        count,
        threshold,
        score
      }
    : undefined;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGF0cy9jbGFzc0RhdGFBYnN0cmFjdGlvbkNvdXBsaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQXNDO0FBWXpCLFFBQUEsSUFBSSxHQUFzQixLQUFLLFVBQVUsSUFBSSxDQUN4RCxVQUFVLEVBQ1YsRUFBRSxTQUFTLEVBQUU7SUFFYixNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDeEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDZCxLQUFLLE1BQU0sU0FBUyxJQUFJLE9BQU8sRUFBRTtRQUMvQixJQUFJLGtCQUFrQixHQUFHLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQUU7WUFDOUMsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUsscUJBQVUsQ0FBQyxhQUFhLEVBQUU7Z0JBQy9DLGtCQUFrQixFQUFFLENBQUM7Z0JBQ3JCLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNsQjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsS0FBSztZQUNILFNBQVMsR0FBRyxDQUFDLElBQUksa0JBQWtCLElBQUksU0FBUztnQkFDOUMsQ0FBQyxDQUFDLGtCQUFrQixHQUFHLFNBQVM7Z0JBQ2hDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDVDtJQUNELE9BQU8sS0FBSztRQUNWLENBQUMsQ0FBQztZQUNFLE1BQU0sRUFBRSw4QkFBOEI7WUFDdEMsS0FBSyxFQUFFLE9BQU87WUFDZCxLQUFLO1lBQ0wsU0FBUztZQUNULEtBQUs7U0FDTjtRQUNILENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDaEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ludGF4S2luZCB9IGZyb20gXCJ0cy1tb3JwaFwiO1xuaW1wb3J0IHsgU3RhdCwgU3RhdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG4vKipcbiAqIEVudW1lcmF0ZXMgdGhlIGNsYXNzZXMgaW4gdGhlIHNvdXJjZSBmaWxlLCBsb29raW5nIGZvciBuZXcgZXhwcmVzc2lvbnMgd2l0aGluXG4gKiB0aGUgY2xhc3MsIHdoZXJlIGlmIHRoZSBudW1iZXIgb2YgbmV3IGV4cHJlc3Npb25zIGlzIGdyZWF0ZXIgdGhlIHRoZVxuICogdGhyZXNob2xkLCBwcm92aWRlIGEgc2NvcmUgcmVsYXRpdmUgdG8gdGhlIHRocmVzaG9sZC5cbiAqXG4gKiBBIGhpZ2ggbGV2ZWwgb2YgZGVwZW5kZW5jeSBvbiBvdGhlciBjbGFzc2VzIHdpdGhpbiBhIGNsYXNzLCBtZWFucyB0aGF0IHRoZVxuICogY2xhc3MgaXMgdGlnaHRseSBjb3VwbGVkIHRvIHRoZXNlIG90aGVyIGNsYXNzZXMgd2hpY2ggbWFrZSBpdCBoYXJkZXIgdG9cbiAqIG1haW50YWluLlxuICovXG5leHBvcnQgY29uc3Qgc3RhdDogU3RhdDxTdGF0T3B0aW9ucz4gPSBhc3luYyBmdW5jdGlvbiBzdGF0KFxuICBzb3VyY2VGaWxlLFxuICB7IHRocmVzaG9sZCB9XG4pIHtcbiAgY29uc3QgY2xhc3NlcyA9IHNvdXJjZUZpbGUuZ2V0Q2xhc3NlcygpO1xuICBjb25zdCBjb3VudCA9IGNsYXNzZXMubGVuZ3RoO1xuICBsZXQgc2NvcmUgPSAwO1xuICBmb3IgKGNvbnN0IGNsYXNzTm9kZSBvZiBjbGFzc2VzKSB7XG4gICAgbGV0IG5ld0V4cHJlc3Npb25Db3VudCA9IDA7XG4gICAgY2xhc3NOb2RlLmZvckVhY2hEZXNjZW5kYW50KChub2RlLCB0cmF2ZXJzYWwpID0+IHtcbiAgICAgIGlmIChub2RlLmdldEtpbmQoKSA9PT0gU3ludGF4S2luZC5OZXdFeHByZXNzaW9uKSB7XG4gICAgICAgIG5ld0V4cHJlc3Npb25Db3VudCsrO1xuICAgICAgICB0cmF2ZXJzYWwuc2tpcCgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHNjb3JlICs9XG4gICAgICB0aHJlc2hvbGQgPiAwICYmIG5ld0V4cHJlc3Npb25Db3VudCA+PSB0aHJlc2hvbGRcbiAgICAgICAgPyBuZXdFeHByZXNzaW9uQ291bnQgLyB0aHJlc2hvbGRcbiAgICAgICAgOiAwO1xuICB9XG4gIHJldHVybiBjb3VudFxuICAgID8ge1xuICAgICAgICBtZXRyaWM6IFwiY2xhc3NEYXRhQWJzdHJhY3Rpb25Db3VwbGluZ1wiLFxuICAgICAgICBsZXZlbDogXCJjbGFzc1wiLFxuICAgICAgICBjb3VudCxcbiAgICAgICAgdGhyZXNob2xkLFxuICAgICAgICBzY29yZVxuICAgICAgfVxuICAgIDogdW5kZWZpbmVkO1xufTtcbiJdfQ==
