"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts_morph_1 = require("ts-morph");
exports.stat = async function stat(sourceFile, { threshold }) {
  let count = 0;
  let score = 0;
  sourceFile.forEachDescendant((node, traversal) => {
    if (ts_morph_1.TypeGuards.isBinaryExpression(node)) {
      count++;
      let complexity = 1;
      node.forEachDescendant(node => {
        if (ts_morph_1.TypeGuards.isBinaryExpression(node)) {
          complexity++;
        }
      });
      score +=
        threshold > 0 && complexity >= threshold ? complexity / threshold : 0;
      traversal.skip();
    }
  });
  return count
    ? {
        metric: "binaryExpressionComplexity",
        level: "statement",
        count,
        threshold,
        score
      }
    : undefined;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluYXJ5RXhwcmVzc2lvbkNvbXBsZXhpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RhdHMvYmluYXJ5RXhwcmVzc2lvbkNvbXBsZXhpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBc0M7QUFHekIsUUFBQSxJQUFJLEdBQXNCLEtBQUssVUFBVSxJQUFJLENBQ3hELFVBQVUsRUFDVixFQUFFLFNBQVMsRUFBRTtJQUViLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsRUFBRTtRQUMvQyxJQUFJLHFCQUFVLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkMsS0FBSyxFQUFFLENBQUM7WUFDUixJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1QixJQUFJLHFCQUFVLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUU7b0JBQ3ZDLFVBQVUsRUFBRSxDQUFDO2lCQUNkO1lBQ0gsQ0FBQyxDQUFDLENBQUM7WUFDSCxLQUFLO2dCQUNILFNBQVMsR0FBRyxDQUFDLElBQUksVUFBVSxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hFLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNsQjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxLQUFLO1FBQ1YsQ0FBQyxDQUFDO1lBQ0UsTUFBTSxFQUFFLDRCQUE0QjtZQUNwQyxLQUFLLEVBQUUsV0FBVztZQUNsQixLQUFLO1lBQ0wsU0FBUztZQUNULEtBQUs7U0FDTjtRQUNILENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDaEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZUd1YXJkcyB9IGZyb20gXCJ0cy1tb3JwaFwiO1xuaW1wb3J0IHsgU3RhdCwgU3RhdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5leHBvcnQgY29uc3Qgc3RhdDogU3RhdDxTdGF0T3B0aW9ucz4gPSBhc3luYyBmdW5jdGlvbiBzdGF0KFxuICBzb3VyY2VGaWxlLFxuICB7IHRocmVzaG9sZCB9XG4pIHtcbiAgbGV0IGNvdW50ID0gMDtcbiAgbGV0IHNjb3JlID0gMDtcbiAgc291cmNlRmlsZS5mb3JFYWNoRGVzY2VuZGFudCgobm9kZSwgdHJhdmVyc2FsKSA9PiB7XG4gICAgaWYgKFR5cGVHdWFyZHMuaXNCaW5hcnlFeHByZXNzaW9uKG5vZGUpKSB7XG4gICAgICBjb3VudCsrO1xuICAgICAgbGV0IGNvbXBsZXhpdHkgPSAxO1xuICAgICAgbm9kZS5mb3JFYWNoRGVzY2VuZGFudChub2RlID0+IHtcbiAgICAgICAgaWYgKFR5cGVHdWFyZHMuaXNCaW5hcnlFeHByZXNzaW9uKG5vZGUpKSB7XG4gICAgICAgICAgY29tcGxleGl0eSsrO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHNjb3JlICs9XG4gICAgICAgIHRocmVzaG9sZCA+IDAgJiYgY29tcGxleGl0eSA+PSB0aHJlc2hvbGQgPyBjb21wbGV4aXR5IC8gdGhyZXNob2xkIDogMDtcbiAgICAgIHRyYXZlcnNhbC5za2lwKCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGNvdW50XG4gICAgPyB7XG4gICAgICAgIG1ldHJpYzogXCJiaW5hcnlFeHByZXNzaW9uQ29tcGxleGl0eVwiLFxuICAgICAgICBsZXZlbDogXCJzdGF0ZW1lbnRcIixcbiAgICAgICAgY291bnQsXG4gICAgICAgIHRocmVzaG9sZCxcbiAgICAgICAgc2NvcmVcbiAgICAgIH1cbiAgICA6IHVuZGVmaW5lZDtcbn07XG4iXX0=
