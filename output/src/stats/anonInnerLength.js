"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts_morph_1 = require("ts-morph");
const util_1 = require("../util");
exports.stat = async function stat(sourceFile, { threshold }) {
  let count = 0;
  let score = 0;
  sourceFile.forEachDescendant((node, traversal) => {
    const syntaxKind = node.getKind();
    if (
      syntaxKind === ts_morph_1.SyntaxKind.ClassExpression ||
      syntaxKind === ts_morph_1.SyntaxKind.ArrowFunction
    ) {
      count++;
      const length = util_1.lineCount(node.getText());
      score += threshold && length >= threshold ? length / threshold : 0;
      traversal.skip();
    }
  });
  return count
    ? {
        metric: "anonInnerLength",
        level: "item",
        count,
        threshold,
        score
      }
    : undefined;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbklubmVyTGVuZ3RoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0YXRzL2Fub25Jbm5lckxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFzQztBQUV0QyxrQ0FBb0M7QUFTdkIsUUFBQSxJQUFJLEdBQXNCLEtBQUssVUFBVSxJQUFJLENBQ3hELFVBQVUsRUFDVixFQUFFLFNBQVMsRUFBRTtJQUViLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsRUFBRTtRQUMvQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDbEMsSUFDRSxVQUFVLEtBQUsscUJBQVUsQ0FBQyxlQUFlO1lBQ3pDLFVBQVUsS0FBSyxxQkFBVSxDQUFDLGFBQWEsRUFDdkM7WUFDQSxLQUFLLEVBQUUsQ0FBQztZQUNSLE1BQU0sTUFBTSxHQUFHLGdCQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7WUFDekMsS0FBSyxJQUFJLFNBQVMsSUFBSSxNQUFNLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkUsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2xCO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLEtBQUs7UUFDVixDQUFDLENBQUM7WUFDRSxNQUFNLEVBQUUsaUJBQWlCO1lBQ3pCLEtBQUssRUFBRSxNQUFNO1lBQ2IsS0FBSztZQUNMLFNBQVM7WUFDVCxLQUFLO1NBQ047UUFDSCxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQ2hCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5bnRheEtpbmQgfSBmcm9tIFwidHMtbW9ycGhcIjtcbmltcG9ydCB7IFN0YXQsIFN0YXRPcHRpb25zIH0gZnJvbSBcIi4uL2ludGVyZmFjZXNcIjtcbmltcG9ydCB7IGxpbmVDb3VudCB9IGZyb20gXCIuLi91dGlsXCI7XG5cbi8qKlxuICogU2VhcmNoZXMgdGhlIHNvdXJjZSBmaWxlIGZvciBjbGFzcyBleHByZXNzaW9ucyBvciBhcnJvdyBmdW5jdGlvbnMgYW5kIGxvb2tzXG4gKiBhdCB0aGVpciBsZW5ndGggYWdhaW5zdCB0aGUgdGhyZXNob2xkLlxuICpcbiAqIExvbmcgYXJyb3cgZnVuY3Rpb25zIG9yIGNsYXNzIGV4cHJlc3Npb25zIGNhbiBiZSBkaWZmaWN1bHQgdG8gbWFpbnRhaW4gb3JcbiAqIHVuZGVyc3RhbmQuXG4gKi9cbmV4cG9ydCBjb25zdCBzdGF0OiBTdGF0PFN0YXRPcHRpb25zPiA9IGFzeW5jIGZ1bmN0aW9uIHN0YXQoXG4gIHNvdXJjZUZpbGUsXG4gIHsgdGhyZXNob2xkIH1cbikge1xuICBsZXQgY291bnQgPSAwO1xuICBsZXQgc2NvcmUgPSAwO1xuICBzb3VyY2VGaWxlLmZvckVhY2hEZXNjZW5kYW50KChub2RlLCB0cmF2ZXJzYWwpID0+IHtcbiAgICBjb25zdCBzeW50YXhLaW5kID0gbm9kZS5nZXRLaW5kKCk7XG4gICAgaWYgKFxuICAgICAgc3ludGF4S2luZCA9PT0gU3ludGF4S2luZC5DbGFzc0V4cHJlc3Npb24gfHxcbiAgICAgIHN5bnRheEtpbmQgPT09IFN5bnRheEtpbmQuQXJyb3dGdW5jdGlvblxuICAgICkge1xuICAgICAgY291bnQrKztcbiAgICAgIGNvbnN0IGxlbmd0aCA9IGxpbmVDb3VudChub2RlLmdldFRleHQoKSk7XG4gICAgICBzY29yZSArPSB0aHJlc2hvbGQgJiYgbGVuZ3RoID49IHRocmVzaG9sZCA/IGxlbmd0aCAvIHRocmVzaG9sZCA6IDA7XG4gICAgICB0cmF2ZXJzYWwuc2tpcCgpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjb3VudFxuICAgID8ge1xuICAgICAgICBtZXRyaWM6IFwiYW5vbklubmVyTGVuZ3RoXCIsXG4gICAgICAgIGxldmVsOiBcIml0ZW1cIixcbiAgICAgICAgY291bnQsXG4gICAgICAgIHRocmVzaG9sZCxcbiAgICAgICAgc2NvcmVcbiAgICAgIH1cbiAgICA6IHVuZGVmaW5lZDtcbn07XG4iXX0=
